name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # Setup Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    # Setup Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    # Install Backend Dependencies
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python -c "import nltk; nltk.download('punkt'); nltk.download('stopwords'); nltk.download('wordnet'); nltk.download('averaged_perceptron_tagger')"

    # Install Frontend Dependencies
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm install

    # Run Backend Tests (if you add them later)
    - name: Run Backend Tests
      working-directory: ./backend
      run: |
        pip install pytest
        pytest

    # Run Frontend Tests (if you add them later)
    - name: Run Frontend Tests
      working-directory: ./frontend
      run: npm test

    # Build Frontend
    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build

    # Upload Frontend Build Artifact
    - name: Upload Frontend Build
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/.next

    # Upload Backend Artifact
    - name: Upload Backend Files
      uses: actions/upload-artifact@v3
      with:
        name: backend-files
        path: backend/

  deploy:
    needs: test-and-build
    if: github.ref == 'refs/heads/main' # Only deploy on main branch
    runs-on: ubuntu-latest
    
    steps:
    - name: Download Frontend Build
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: frontend/.next

    - name: Download Backend Files
      uses: actions/download-artifact@v3
      with:
        name: backend-files
        path: backend/

    # Add deployment steps here based on your chosen deployment method
    # For VPS deployment:
    - name: Deploy to VPS
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
      run: |
        # Setup SSH
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        
        # Deploy using rsync
        rsync -avz -e "ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no" \
          --exclude 'node_modules' \
          --exclude '.git' \
          --exclude 'venv' \
          ./ $SERVER_USER@$SERVER_IP:/var/www/jobhelp/
